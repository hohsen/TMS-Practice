<?php

// Создание строк:
// Задача:
// Создайте переменную $string и присвойте ей значение "Привет, мир!".
$string = 'Привет, мир!';



// Сцепление строк:
// Задача:
// Создайте переменные $str1 и $str2 и склейте их вместе с помощью оператора ".".
$str1 = 'Hello';
$str2 = 'world';
$final = $str1 . $str2;



// Извлечение символов из строк:
// Задача:
// Извлеките символы "w" и "o" из строки "Hello World!".
$text = "Hello World!";
print_r($text[4]);
print_r($text[6]);
print_r($text[7]);



// Поиск подстроки:
// Задача:
// Проверьте, содержит ли строка "Hello World!" подстроку "World".
$text = 'Hello World!';
    $search = stripos ($text, 'World');
    if ($search === false)
    {
        return "Не содержится.";
    }
    else
    {
        return "Да, данная подстрака есть в тексте.";
    }

// Замена подстроки:
// Задача:
// Замените все вхождения подстроки "world" на "everyone" в строке "Hello world!".
$replace = str_replace('world', 'everyone', 'Hello world');



// Обработка HTML-тегов:
// Задача:
// Удалите все HTML-теги из строки "<p>Hello, <b>world</b>!</p>".
$textWithTags = "<p>Hello, <b>world</b>!</p>";
echo strip_tags($textWithTags);



// Преобразование регистра:
// Задача:
// Преобразуйте строку "HeLLo, WorLd!" к нижнему регистру.
$stringOne = "HeLLo, WorLd!";
echo strtolower($stringOne);



// Разбиение строки на подстроки:
// Задача:
// Разбейте строку "apple,orange,banana" на массив из трех элементов.
$stringTwo = "apple,orange,banana";
$str_arr = explode(',', $stringTwo);
print_r ($str_arr);



// Задача:
// Создайте массив из 5 элементов и выведите на экран второй элемент.
$array = [1,2,3,4,5];
echo $array['1'];



// Задача:
// Создайте массив чисел от 1 до 10, найдите сумму элементов массива и выведите на экран используя функцию array_sum;
$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
echo array_sum ($arr);



// Задача:
// Создайте массив строк, отсортируйте его в алфавитном порядке и выведите на экран.
$arr = ['g','w','x','a','u'];
sort($arr);



// Задача:
// Создайте двумерный массив и выведите на экран элемент, расположенный во втором ряду и третьем столбце.
$row0 = [1,2,3];
$row1 = [4,5,6];
$arr = array($row0, $row1);
echo $arr[1][2];



// Задача:
// Создайте ассоциативный массив, где ключами будут названия фруктов, а значениями - их цена в рублях за килограмм. Выведите на экран цену апельсинов.
$arr = array('apple' => 5.10, 'banan' => 500.14, 'orange' => 30.2);
echo $arr['orange'];



// Задача:
// Найти значение по ключу. Напишите функцию, которая принимает ассоциативный массив и ключ, и возвращает значение, связанное с этим ключом, если ключ существует, и null в противном случае.
$arr = ['key1' => 1, 'key2' => 2, 'key3' => 3];

function array_searc($arr, $key){
    if (array_key_exists($key, $arr)) {
        echo $arr[$key];
    }
    else{
        echo 'null';
    }
}



// Задача:
// Поиск наибольшего значения. Напишите функцию, которая принимает ассоциативный массив и возвращает наибольшее значение из всех значений в массиве.
$arr = ['num1' => 1, 'num2' => 5, 'num3' => 2];
$arrMax = max($arr);



// Задача:
// Сортировка по значениям. Напишите функцию, которая принимает ассоциативный массив и сортирует его по значениям.
$arr = ['num1' => 1, 'num2' => 2, 'num3' => 5];
krsort($arr);
foreach ($arr as $key => $val) {
    echo $key = $val;
}


// Задача:
// У вас есть массив чисел. Напишите функцию, которая принимает этот массив и колбек функцию в качестве аргументов. 
// Функция должна применить колбек к каждому элементу массива и вернуть новый массив, содержащий результаты применения колбека к каждому элементу.
$arr = [1, 2, 3, 4];
function my_callback($num){
    return ++$num;
}
print_r(array_map('my_callback', $arr));
?>
